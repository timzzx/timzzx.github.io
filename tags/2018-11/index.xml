<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2018 11 on 淡淡忧愁</title>
    <link>https://timx.cn/tags/2018-11/</link>
    <description>Recent content in 2018 11 on 淡淡忧愁</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 30 Oct 2018 14:35:43 +0800</lastBuildDate>
    
	<atom:link href="https://timx.cn/tags/2018-11/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>数据结构和算法学习理解C语言实现(三)</title>
      <link>https://timx.cn/post/c_algorithm_3/</link>
      <pubDate>Tue, 30 Oct 2018 14:35:43 +0800</pubDate>
      
      <guid>https://timx.cn/post/c_algorithm_3/</guid>
      <description>树 “树”主要有根、干、枝、叶组成。在数据结构中树被引申为一个集合以及在该集合上定义的一种关系构成，包括根节点和若干课子树。
单个节点是一棵树，树根就是该节点本身。设T1,T2，···,Tk是数，它们的根节点分别为n1，n2，···，nk。如果用一个新节点n作为n1，n2，···，nk的父亲，得到一颗新树，节点n就是新树的根。称n1，n2，···，nk为一组兄弟节点，它们都是节点n的子节点，称n1，n2，···，nk为节点n的子树。由此可见数是由边连接起来的一系列节点，树的一个实例就是公司的组织机构图。
“树”需要满足如下两个条件
 有且仅有一个特定的称为根的节点 其余的节点可分为m个互不相交的有限集合T1，T2，···，Tm，其中，每个集合又都是一棵树（子树）。  树的相关概念
 节点的度：是指一个节点的子树个数。 树的度：一棵树中节点度的最大值。 叶子（终端节点）：度为0的节点 分支节点（非终端节点）：度不为0的节点。 内部节点：除根节点之外的分支节点。 孩子：将树中某个节点的子树的根称为这个节点的孩子。 双亲：某个节点的上层节点称为该节点的双亲。 兄弟：同一个双亲的孩子。 路径：如果在树中存在一个节点序列k1，k2，···，kj，使得ki是ki+1的双亲（1≤i&amp;lt;j）,称该节点序列是从k1到kj的一条路径 祖先：如果树中节点k到ks之间存在一条路径，则称k是ks的祖先。 子孙：ks是k的子孙。 层次：节点的层次是从根开始算起，第1层为根。 高度：树中节点的最大层次称为树的高度或深度。 有序数：将树中每个节点的各子树看成是从左到右有秩序的。 无序数：有序树之外的称为无序数。 森林：是n(n≥0)课互不想交的树的集合。  二叉树 二叉树是指每个节点最多有两个子树的有序树，通常将其两个子树的根分别称作“左子树”和“右子树”。
二叉树是节点的有限集，可以是空集，也可以是由一个根节点及两颗不相交的子树组成，通常将这两颗不想交的子树分别称作这个根的左子树和右子树。二叉树的特点。
 每个节点至多有两颗子树，即不存在度大于2的节点。 二叉树的子树有左右之分，次序不能颠倒。 二叉树的第i层最多有2的i-1次方个节点。 深度为k的二叉树最多有2的k次方-1个节点。 对任何一颗二叉树T，如果其终端节点树（即叶子节点树）为n0，度为2的节点树为n2，则n0=n2+1.  二叉树有5种基本形态
 空二叉树。 只有一个根节点的二叉树。 右子树为空的二叉树。 左子树为空的二叉树。 完全二叉树。  两种特殊的二叉树形态
 满二叉树：除了叶节点外，每一个节点都有左右子叶，并且叶节点都处在最底层的二叉树 完全二叉树：只有最下层的两层节点度小于2，并且最下面一层的节点都集中在该层最左边的若干位置的二叉树。  二叉树的性质
1） 在二叉树中，第i层的节点总数不超过2的i-1次方
2） 深度为h的二叉树最少有h个节点，最多有2的h次方-1个节点（h≥1）。
3） 对于任意一颗二叉树来说，如果叶节点树为n0，且度数为2的节点总数为n2，则n0=n2+1.
4） 有n个节点的完全二叉树的深度为int(log2底n) + 1.
5） 存在一个有n个节点的完全二叉树，如果各节点用顺序方式存储，则在节点之间有如下关系。
 如果i=1，则节点i为根，无父节点；如果i＞1，则父节点编号为trunc(n/2). 如果2i≤n，则其左儿子（即左子树的根节点）的编号为2i；如果2i&amp;gt;n,则无左儿子。 如果2i+1≤n，则其右儿子的节点编号为2i+1；如果2i+1＞n，则无右儿子。  6） 假设有n个节点，能构成h(n)种不同的二叉树，则h(n)为卡特兰数的第n项，h(n)=C(n,2n)/(n+1).</description>
    </item>
    
  </channel>
</rss>