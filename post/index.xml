<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 淡淡忧愁</title>
    <link>https://timx.cn/post/</link>
    <description>Recent content in Posts on 淡淡忧愁</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 16 Jul 2018 16:13:50 +0800</lastBuildDate>
    
	<atom:link href="https://timx.cn/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TCP/IP学习理解(三)</title>
      <link>https://timx.cn/post/tcp_3/</link>
      <pubDate>Mon, 16 Jul 2018 16:13:50 +0800</pubDate>
      
      <guid>https://timx.cn/post/tcp_3/</guid>
      <description>以太网帧格式 类型  Ethernet II:以太网第二版或者称之为Ethernet II帧，DIX帧，是最常见的帧类型。并通常直接被IP协议使用。 IEEE 802.3:Novell的非标准IEEE 802.3帧变种。 IEEE 802.2:逻辑链路控制 (LLC) 帧 SNAP:子网接入协议(SNAP)帧  Ethernet II通常是用于IP协议,包括的字段    字段 长度 备注     目的MAC地址 6个字节 因为后来源IP 目的IP 源端口 目的端口信息中，源始终是放在前面的，而这里目的MAC放在了前面，原因在于现在转发形式为存储转发，而在这里还有一条转发方式叫做快速转发，即只查找目的MAC地址，即直接转发，所以将目的MAC放在前面查找的过程中速度会加快   源MAC地址 6个字节 -   协议类型 2个字节 -    
   协议 标识     IPv4 0x0800   IPX 0x8137   ARP 0x0806   Pause Control 0x8808   IPv6 0x86DD    IP头部报文   1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1      版本 4位  包头长度 4位  服务类型 8位  长度 16位    标识 16位  标志 3位  段偏移量 13位    TTL 4位  协议 4位  校验和 16位     源IP地址 32位    目的IP地址 32位     IP包头字段说明 版本：4位，指定IP协议的版本号。 包头长度(IHL)：  4位，IP协议包头的长度，指明IPv4协议包头长度的字节数包含多少个32位。</description>
    </item>
    
    <item>
      <title>TCP/IP学习理解(二)</title>
      <link>https://timx.cn/post/tcp_2/</link>
      <pubDate>Fri, 13 Jul 2018 11:25:28 +0800</pubDate>
      
      <guid>https://timx.cn/post/tcp_2/</guid>
      <description>名词解释
 使用Wiresharkz抓包工具时，发现有很多协议（protocol） ARP  ARP是通过网络地址(例：IPv4)来定位MAC地址 (也称为以太网地址)。 ARP已经在很多网路层和数据链接层之间得以实现，包括IPv4，Chaosnet, DECnet和Xerox PARC Universal Packet (PUP) 使用IEEE 802标准, 光纤分布式数据接口, X.25, 帧中继和异步传输模式 (ATM)， IEEE 802.3和IEEE 802.11标准上IPv4占了多数流量。  BROWSER  CIFS浏览器协议定义由服务器发送和接收的消息，该服务器充当网络上可用服务的交换中心，正在进行网络上可用的打印或文件共享等服务的服务器，以及请求详细信息的客户端。特别的服务。  DHCPv6  一个用来配置工作在IPv6网络上的IPv6主机所需的IP地址、IP前缀和/或其他配置的网络协议。  DNS  域名系统（英文：Domain Name System，缩写：DNS）是互联网的一项服务。它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS使用TCP和UDP端口53[1]。当前，对于每一级域名长度的限制是63个字符，域名总长度则不能超过253个字符。  HTTP  超文本传输协议（英文：HyperText Transfer Protocol，缩写：HTTP）是一种用于分布式、协作式和超媒体信息系统的应用层协议[1]。HTTP是万维网的数据通信的基础。  ICMPv6  是互联网控制消息协议（ICMP）在IPv6协议下的新版本。它在 RFC 4443 中被定义，其协议号（IPv6的Next Header域）为58。 ICMPv6协议定义在TCP/IP参考模型中的网络层（Internet Layer），用于报告IPv6节点数据包处理过程中的错误消息和完成一些网络诊断功能（如ping和Traceroute等）。它是IPv6体系总体的的一个组成部分，其基本的协议[1]必须被所有IPv6实现和IPv6节点所完整支持。  IGMPv3  IGMP 是Internet Group Management Protocol（互联网组管理协议）的简称。它是TCP/IP 协议族中负责IP 组播成员管理的协议，用来在IP主机和与其直接相邻的组播路由器之间建立、维护组播组成员关系。  LLDP  一种数据链路层协议，网络设备可以通过在本地网络中发送LLPDU（Link Layer Discovery Protocol Data Unit）来通告其他设备自身的状态。是一种能够使网络中的设备互相发现并通告状态、交互信息的协议。  LLMNR  在DNS 服务器不可用时，DNS 客户端计算机可以使用本地链路多播名称解析 (LLMNR—Link-Local Multicast Name Resolution)（也称为多播 DNS 或 mDNS）来解析本地网段上的名称。例如，如果路由器出现故障，从网络上的所有 DNS 服务器切断了子网，则支持 LLMNR 的子网上的客户端可以继续在对等基础上解析名称，直到网络连接还原为止。  NBNS  NBNS（网络基本输入/输出系统 (NetBIOS) 名称服务器）在基于 NetBIOS 名称访问的网络上提供主机名和地址映射方法。 NetBIOS是Network Basic Input/Output System的简称，一般指用于局域网通信的一套API，不支持路由，NetBIOS提供三种不同的服务： 名字服务：名字登记和解析；会话服务：可靠的基于连接的通信；数据包服务：不可靠的无连接通信 。在Windows下通过nbtstat -n可以查询本地NetBIOS相关信息。 NBNS是动态DNS的一种，Microsoft的NBNS实现称为WINS（Windows Internet Name Service）。WINS数据库是动态更新的。计算机每当初始化TCP/IP后都会将它的NetBIOS名和IP地址的对应关系映射到WINS服务器的数据库中。如果在局域网络中抓取并观察数据包，会发现有大量的NBNS数据包。开启了WINS的主机就会发出广播，使用UDP协议，连137端口。 如果计算机需要知道一个NetBIOS名称或者域名对应的IP地址，首先会查找本地Hosts文件和NetBIOS缓存，其次会向WINS服务器发出请求，会发出NBNS数据包，最后会联系DNS服务器进行解析。  SMB Mailslot  MB(全称是Server Message Block)是一个协议名，它能被用于Web连接和客户端与服务器之间的信息沟通。SMB最初是IBM的贝瑞·费根鲍姆（Barry Feigenbaum）研制的，其目的是将DOS操作系统中的本地文件接口“中断13”改造为网络文件系统。 公司的网络硬盘使用的协议  SSDP  构成UPnP（通用即插即用）技术的核心协议之一。它为网络客户端（network client）提供了一种发现网络服务（network services）的机制，采用基于通知和发现路由的多播方式实现。 SSDP客户端向此地址发送HTTP UDP 发现请求，查询某种类型的服务。SSDP服务在此地址上监听服务发现请求。当服务监听到的HTTP UDP 发现请求和它自己提供的服务匹配时，它以单播方式发送HTTP UDP 响应。  SSL  SSL(Secure Sockets Layer 安全套接层),及其继任者传输层安全（Transport Layer Security，TLS）是为网络通信提供安全及数据完整性的一种安全协议。TLS与SSL在传输层对网络连接进行加密。  STP  STP（Spanning Tree Protocol）是生成树协议的英文缩写。该协议可应用于在网络中建立树形拓扑，消除网络中的环路，并且可以通过一定的方法实现路径冗余，但不是一定可以实现路径冗余。生成树协议适合所有厂商的网络设备，在配置上和体现功能强度上有所差别，但是在原理和应用效果是一致的。  TCP  TCP（Transmission Control Protocol 传输控制协议）是一种面向连接的、可靠的、基于字节流的传输层通信协议，由IETF的RFC 793定义。在简化的计算机网络OSI模型中，它完成第四层传输层所指定的功能，用户数据报协议（UDP）是同一层内 [1] 另一个重要的传输协议。在因特网协议族（Internet protocol suite）中，TCP层是位于IP层之上，应用层之下的中间层。不同主机的应用层之间经常需要可靠的、像管道一样的连接，但是IP层不提供这样的流机制，而是提供不可靠的包交换。  TLSv1.</description>
    </item>
    
    <item>
      <title>TCP/IP学习理解(一)</title>
      <link>https://timx.cn/post/tcp_1/</link>
      <pubDate>Wed, 11 Jul 2018 16:31:53 +0800</pubDate>
      
      <guid>https://timx.cn/post/tcp_1/</guid>
      <description>Transmission Control Protocol/Internet Protocol的简写，中译名为传输控制协议/因特网互联协议，又名网络通讯协议，是Internet最基本的协议、Internet国际互联网络的基础，由网络层的IP协议和传输层的TCP协议组成。TCP/IP 定义了电子设备如何连入因特网，以及数据如何在它们之间传输的标准。协议采用了4层的层级结构，每一层都呼叫它的下一层所提供的协议来完成自己的需求。通俗而言：TCP负责发现传输的问题，一有问题就发出信号，要求重新传输，直到所有数据安全正确地传输到目的地。而IP是给因特网的每一台电脑规定一个地址。
 TCP/IP四层模型    应用层    HTTP      运输层    TCP、UDP     网络层（互联网层）    IP      链路层（数据链路层/网络接口层）    设备驱动程序、计算机中对应的网络接口卡    OSI七层模型    应用层     表示层     会话层     传输层     网络层     数据链路层     物理层    OSI七层模式简单通俗理解  这个模型推出的最开始，是是因为美国人有两台机器之间进行通信的需求。</description>
    </item>
    
    <item>
      <title>hugo的模板Maupassant</title>
      <link>https://timx.cn/post/maupassant/</link>
      <pubDate>Wed, 11 Jul 2018 11:05:03 +0800</pubDate>
      
      <guid>https://timx.cn/post/maupassant/</guid>
      <description> maupassant-hugo Maupassant theme, ported to Hugo. 这个模板基于 https://github.com/JokerQyou/maupassant-hugo
用模板做的个人blog https://timx.cn/
模板下载地址 https://github.com/timzzx/maupassant-hugo
1.添加了右侧卡片式的个人介绍 2.添加了右侧日历显示 3.添加了gittalk评论（之前加了gitment，后来发现gittalk更优秀就替换成gittalk） 4.原模板中手机端显示右侧栏会被隐藏，修改后在手机端让右侧栏显示在文章的下方。 5.添加了背景动画 6.修改了hugo的TableOfContents的样式 由于hugo的文章目录是根据标题的#自动设置ul li的层次。所以如果标题用的#号过多显示会比较难看。
6.修改了表格展示的样式 6.增加了fontawesome icons 注意事项 1.要增加菜单在md文件中加入type: standalone
2.文章要有评论在md文件中加入gitment: true
3.文章要有目录在md文件中加入TableOfContents: true
--- title: &amp;quot;博客开通&amp;quot; date: 2018-07-04T17:44:01+08:00 categories: [其他] tags: [其他] gitment: true TableOfContents: true ---  4.配置gitment在config.toml加入以下配置
[params] clientID=&#39;&#39; clientSecret=&#39;&#39; owner=&#39;&#39; repo=&#39;&#39; admin=&#39;&#39;  </description>
    </item>
    
    <item>
      <title>markdown基本写法</title>
      <link>https://timx.cn/post/markdown/</link>
      <pubDate>Mon, 09 Jul 2018 18:17:05 +0800</pubDate>
      
      <guid>https://timx.cn/post/markdown/</guid>
      <description>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。 Markdown具有一系列衍生版本，用于扩展Markdown的功能（如表格、脚注、内嵌HTML等等），这些功能原初的Markdown尚不具备，它们能让Markdown转换成更多的格式，例如LaTeX，Docbook。Markdown增强版中比较有名的有Markdown Extra、MultiMarkdown、 Maruku等。这些衍生版本要么基于工具，如Pandoc；要么基于网站，如GitHub和Wikipedia，在语法上基本兼容，但在一些语法和渲染效果上有改动。
 标题 标题 H1 标题 H2 标题 H3 标题 H4 标题 H5 标题 H6 # 标题 H1 ## 标题 H2 ### 标题 H3 #### 标题 H4 ##### 标题 H5 ###### 标题 H6  下划线 ----  表格    水果 价格 数量     香蕉 $1 5   苹果 $1 6   草莓 $1 7    | 水果 | 价格 | 数量 | | ------- | -----: | :----: | | 香蕉 | $1 | 5 | | 苹果 | $1 | 6 | | 草莓 | $1 | 7 |  文本强调 斜体 or 强调</description>
    </item>
    
    <item>
      <title>博客开通</title>
      <link>https://timx.cn/post/new/</link>
      <pubDate>Wed, 04 Jul 2018 17:44:01 +0800</pubDate>
      
      <guid>https://timx.cn/post/new/</guid>
      <description>  第一次用github的Pages来做自己的博客感觉挺有意思，希望自己能坚持写下去吧！
 测试代码展示 package main import &amp;quot;fmt&amp;quot; func main() { fmt.Println(&amp;quot;Hello World&amp;quot;) }  </description>
    </item>
    
  </channel>
</rss>